package com.example.car_hw01;import androidx.appcompat.app.AppCompatActivity;import android.os.Bundle;import android.os.CountDownTimer;import android.os.Handler;import android.os.Looper;import android.view.View;import android.widget.Button;import android.widget.FrameLayout;import android.widget.ImageView;import android.widget.TextView;import android.widget.Toast;import java.util.ArrayList;import java.util.Random;import java.util.Timer;import java.util.TimerTask;public class MainActivity extends AppCompatActivity {    private Timer t;    private TextView score;    private int bonus = 100; // score    private Random numFrame;    int newScore=0;    int rand_int1;    int numOfHearts=3;    private Handler showsHandler = new Handler();    private Button rightButton, leftButton;            // rows    private ImageView[][] cars = new ImageView[5][3];    private int[][] map = new int[5][3];    private ArrayList<ImageView> a_yellowsCars;    private ArrayList<ImageView> b_yellowsCars;    private ArrayList<ImageView> c_yellowsCars;    private ArrayList<ImageView> blueCars;    private ArrayList<ImageView> heart;    private ImageView right1, right2, right3, right4, right5;  // yellow cars right    private ImageView middle1, middle2, middle3, middle4, middle5;  // middle yellow cars right    private ImageView left1, left2, left3, left4, left5;    // yellow cars left    private ImageView blueRight, blueMiddle, blueLeft;    // blue user car    private ImageView heart1, heart2, heart3;      // 3 hearts for game    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        rightButton = findViewById(R.id.rightButton);        leftButton = findViewById(R.id.leftButton);        a_yellowsCars = new ArrayList<>();        a_yellowsCars.add(findViewById(R.id.right1));        a_yellowsCars.add(findViewById(R.id.right2));        a_yellowsCars.add(findViewById(R.id.right3));        a_yellowsCars.add(findViewById(R.id.right4));        a_yellowsCars.add(findViewById(R.id.right5));        c_yellowsCars = new ArrayList<>();        c_yellowsCars.add(findViewById(R.id.left1));        c_yellowsCars.add(findViewById(R.id.left2));        c_yellowsCars.add(findViewById(R.id.left3));        c_yellowsCars.add(findViewById(R.id.left4));        c_yellowsCars.add(findViewById(R.id.left5));        b_yellowsCars = new ArrayList<>();        b_yellowsCars.add(findViewById(R.id.middle1));        b_yellowsCars.add(findViewById(R.id.middle2));        b_yellowsCars.add(findViewById(R.id.middle3));        b_yellowsCars.add(findViewById(R.id.middle4));        b_yellowsCars.add(findViewById(R.id.middle5));        blueCars = new ArrayList<>();        blueCars.add(findViewById(R.id.blueRight));        blueCars.add(findViewById(R.id.blueMiddle));        blueCars.add(findViewById(R.id.blueLeft));        heart = new ArrayList<>();        heart.add(findViewById(R.id.heart1));        heart.add(findViewById(R.id.heart2));        heart.add(findViewById(R.id.heart3));        score = findViewById(R.id.score);        rightButton.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if (blueCars.get(1).getVisibility() == View.VISIBLE) {                    blueCars.get(1).setVisibility(blueCars.get(1).INVISIBLE);                    blueCars.get(2).setVisibility(blueCars.get(2).VISIBLE);                } else if (blueCars.get(0).getVisibility() == View.VISIBLE) {                    blueCars.get(0).setVisibility(blueCars.get(0).INVISIBLE);                    blueCars.get(1).setVisibility(blueCars.get(1).VISIBLE);                }            }        });        leftButton.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if (blueCars.get(1).getVisibility() == View.VISIBLE) {                    blueCars.get(1).setVisibility(blueCars.get(1).INVISIBLE);                    blueCars.get(0).setVisibility(blueCars.get(0).VISIBLE);                } else if (blueCars.get(2).getVisibility() == View.VISIBLE) {                    blueCars.get(2).setVisibility(blueCars.get(2).INVISIBLE);                    blueCars.get(1).setVisibility(blueCars.get(1).VISIBLE);                }            }        });        new CountDownTimer(20000, 1000) {            public void onTick(long millisUntilFinished) {                frame_a();                frame_b();                frame_c();                updateScore();            }            public void onFinish() {                updateScore();            }        }.start();        new Handler(Looper.getMainLooper()).postDelayed(new Runnable() {            @Override            public void run() {                Random rand = new Random();                int rand_int1 = rand.nextInt(3);                if(rand_int1==0){                    a_yellowsCars.get(0).setVisibility(View.VISIBLE);                }                    else if(rand_int1==1){                        b_yellowsCars.get(0).setVisibility(View.VISIBLE);                }                        else{                          c_yellowsCars.get(0).setVisibility(View.VISIBLE);                }            }        }, 5000);        Timer t = new Timer();        t.schedule(new TimerTask() {            @Override            public void run() {                Random rand = new Random();                int rand_int1 = rand.nextInt(3);                if(rand_int1==0){                    a_yellowsCars.get(0).setVisibility(View.VISIBLE);                }                    else if(rand_int1==1){                        b_yellowsCars.get(0).setVisibility(View.VISIBLE);                }                        else{                          c_yellowsCars.get(0).setVisibility(View.VISIBLE);                }            }        }, 0, 100000);    }    private void frame_a () {        for (int i = (a_yellowsCars.size() - 1); i >= 0; i--) {            if (a_yellowsCars.get(i).getVisibility() == View.VISIBLE) {                a_yellowsCars.get(i).setVisibility(View.INVISIBLE);                if (i < a_yellowsCars.size() - 1)                    a_yellowsCars.get(i + 1).setVisibility(View.VISIBLE);            }            if (a_yellowsCars.get(a_yellowsCars.size() - 1).getVisibility() == View.VISIBLE && blueCars.get(0).getVisibility() == View.VISIBLE) {                updateHearts(numOfHearts);            }            if (numOfHearts == 0) {                onStop();            }        }    }    private void frame_b () {        for (int i = (a_yellowsCars.size() - 1); i >= 0; i--) {            if (b_yellowsCars.get(i).getVisibility() == View.VISIBLE) {                b_yellowsCars.get(i).setVisibility(View.INVISIBLE);                if (i < b_yellowsCars.size() - 1)                    b_yellowsCars.get(i + 1).setVisibility(View.VISIBLE);            }            if (b_yellowsCars.get(b_yellowsCars.size() - 1).getVisibility() == View.VISIBLE && blueCars.get(1).getVisibility() == View.VISIBLE) {                updateHearts(numOfHearts);            }            if (numOfHearts == 0) {                onStop();            }        }        ;    }    private void frame_c () {        for (int i = (c_yellowsCars.size() - 1); i >= 0; i--) {            if (c_yellowsCars.get(i).getVisibility() == View.VISIBLE) {                c_yellowsCars.get(i).setVisibility(View.INVISIBLE);                if (i < c_yellowsCars.size() - 1)                    c_yellowsCars.get(i + 1).setVisibility(View.VISIBLE);            }            if (c_yellowsCars.get(c_yellowsCars.size() - 1).getVisibility() == View.VISIBLE && blueCars.get(2).getVisibility() == View.VISIBLE) {                updateHearts(numOfHearts);            }            if (numOfHearts == 0) {                onStop();            }        }    }    private void updateHearts(int numOfHearts) {        numOfHearts--;        heart.get(numOfHearts).setVisibility(View.INVISIBLE);    }    private void updateScore() {        newScore +=100;        score.setText("" + (newScore+bonus));    }//    private void frame(int rand_int1) {//        if (rand_int1 == 0) {//            frame_a();//        } else if (rand_int1 == 1) {//            frame_b();//        } else {//            frame_c();//        }//    }}